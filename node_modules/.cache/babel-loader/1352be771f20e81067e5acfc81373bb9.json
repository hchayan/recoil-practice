{"ast":null,"code":"var _jsxFileName = \"/Users/chayan/Documents/GitHub/recoil-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState } from \"recoil\";\nimport { counterState, thousandWonState } from \"./modules/counterRecoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // 3. 컴포넌트가 atom 읽고 쓰게 하기 위해서 userRecoilState를 사용한다\n  const [counter, setCounter] = useRecoilState(counterState); // 5. selector의 state도 동일하게 사용되지만, 쓰기는 안되기 때문(순수함수의 형태)에 변수 하나로만 받는다\n\n  const money = useRecoilState(thousandWonState);\n\n  const increase = () => {\n    setCounter(counter + 1);\n  };\n\n  const decrease = () => {\n    setCounter(counter - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increase,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrease,\n        children: \"-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"JxecK5MLxDEWNaQbQoRTJcCkSfc=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chayan/Documents/GitHub/recoil-practice/src/App.js"],"names":["useRecoilState","counterState","thousandWonState","App","counter","setCounter","money","increase","decrease"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,yBAA/C;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,cAAc,CAACC,YAAD,CAA5C,CAFa,CAIb;;AACA,QAAMK,KAAK,GAAGN,cAAc,CAACE,gBAAD,CAA5B;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACrBF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAG,MAAM;AACrBH,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAUD;;GAxBQL,G;UAEuBH,c,EAGhBA,c;;;KALPG,G;AA0BT,eAAeA,GAAf","sourcesContent":["import { useRecoilState } from \"recoil\"\nimport { counterState, thousandWonState } from \"./modules/counterRecoil\"\n\nfunction App() {\n  // 3. 컴포넌트가 atom 읽고 쓰게 하기 위해서 userRecoilState를 사용한다\n  const [counter, setCounter] = useRecoilState(counterState)\n\n  // 5. selector의 state도 동일하게 사용되지만, 쓰기는 안되기 때문(순수함수의 형태)에 변수 하나로만 받는다\n  const money = useRecoilState(thousandWonState)\n\n  const increase = () => {\n    setCounter(counter + 1)\n  }\n\n  const decrease = () => {\n    setCounter(counter - 1)\n  }\n  return (\n    <>\n      <h2>{counter}</h2>\n      <h4></h4>\n      <div>\n        <button onClick={increase}>+1</button>\n        <button onClick={decrease}>-1</button>\n      </div>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}