{"ast":null,"code":"// recoil은 정형화된 방법이 없다\nimport { atom, selector } from \"recoil\"; // 2. atom은 상태(state)의 일부를 나타낸다\n// 어떤 컴포넌트에서든 atom을 읽고 쓸 수 있다.\n// atom 값을 읽는 컴포넌트들은 암묵적으로 atom을 구독한다 (변화시 자동 재랜더링)\n\nexport const counterState = atom({\n  key: \"counterState\",\n  // 유니크 키값 - selector(선택자)로 사용된다\n  default: 0 // 기본값 (초기값)\n\n}); // 4. selector는 '파생된 상태(=상태의 변화)' 의 일부\n// 즉, 파생된 상태를 어떤 방법으로든 주어진 상태를 수정하는 순수 함수에 전달된 상태의 결과물로 생각할 수 있다.\n// 쉽게말해서, 어떤 state(atom의) 를 가지고 수정되는 결과물 - 굳이 필요한지는 모르겠다\n\nexport const thousandWonState = selector({\n  key: \"thousandWonState\",\n  // 유니크 키값\n  get: ({\n    get\n  }) => {\n    const amount = get(counterState);\n    return String(amount * 1000) + \"원\";\n  }\n});","map":{"version":3,"sources":["/Users/chayan/Documents/GitHub/recoil-practice/src/modules/counterRecoil.js"],"names":["atom","selector","counterState","key","default","thousandWonState","get","amount","String"],"mappings":"AAAA;AAEA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B,C,CAEA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAGF,IAAI,CAAC;AAC/BG,EAAAA,GAAG,EAAE,cAD0B;AACV;AACrBC,EAAAA,OAAO,EAAE,CAFsB,CAEnB;;AAFmB,CAAD,CAAzB,C,CAKP;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGJ,QAAQ,CAAC;AACvCE,EAAAA,GAAG,EAAE,kBADkC;AACd;AACzBG,EAAAA,GAAG,EAAE,CAAC;AAAEA,IAAAA;AAAF,GAAD,KAAa;AAChB,UAAMC,MAAM,GAAGD,GAAG,CAACJ,YAAD,CAAlB;AAEA,WAAOM,MAAM,CAACD,MAAM,GAAG,IAAV,CAAN,GAAwB,GAA/B;AACD;AANsC,CAAD,CAAjC","sourcesContent":["// recoil은 정형화된 방법이 없다\n\nimport { atom, selector } from \"recoil\"\n\n// 2. atom은 상태(state)의 일부를 나타낸다\n// 어떤 컴포넌트에서든 atom을 읽고 쓸 수 있다.\n// atom 값을 읽는 컴포넌트들은 암묵적으로 atom을 구독한다 (변화시 자동 재랜더링)\nexport const counterState = atom({\n  key: \"counterState\", // 유니크 키값 - selector(선택자)로 사용된다\n  default: 0, // 기본값 (초기값)\n})\n\n// 4. selector는 '파생된 상태(=상태의 변화)' 의 일부\n// 즉, 파생된 상태를 어떤 방법으로든 주어진 상태를 수정하는 순수 함수에 전달된 상태의 결과물로 생각할 수 있다.\n// 쉽게말해서, 어떤 state(atom의) 를 가지고 수정되는 결과물 - 굳이 필요한지는 모르겠다\nexport const thousandWonState = selector({\n  key: \"thousandWonState\", // 유니크 키값\n  get: ({ get }) => {\n    const amount = get(counterState)\n\n    return String(amount * 1000) + \"원\"\n  },\n})\n"]},"metadata":{},"sourceType":"module"}